{"version":3,"file":"static/js/101.7cf2c092.chunk.js","mappings":"qOACA,EAA4B,6BAA5B,EAAgE,wBAAhE,EAAgG,yBAAhG,EAAiI,yBAAjI,EAAkK,yBAAlK,EAAoM,0B,SCIrL,SAASA,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAUAC,EAAQ,WACVP,EAAS,IACTE,EAAY,KAGd,OACI,iBAAKM,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,sBAEA,kBAAMC,SAfO,SAAAC,GACnBA,EAAEC,iBACFhB,EAASiB,EAAAA,EAAAA,MAAqB,CAAEd,MAAAA,EAAOE,SAAAA,KACvCM,KAYoCC,UAAWC,EAAQK,aAAa,MAA9D,WACE,mBAAON,UAAWC,EAAlB,mBAEE,kBAAOD,UAAWC,EAChBM,KAAK,QACLV,KAAK,QACLC,MAAOP,EACPiB,SAAUb,EACVW,aAAa,MACbG,UAAQ,QAIZ,mBAAOT,UAAWC,EAAlB,sBAEE,kBAAOD,UAAWC,EAChBM,KAAK,WACLV,KAAK,WACLC,MAAOL,EACPe,SAAUb,EACVW,aAAa,MACbI,QAAQ,8BACRD,UAAQ,QAGZ,mBAAQT,UAAWC,EAAUM,KAAK,SAAlC","sources":["webpack://goit-react-hw-08-phonebook/./src/views/LoginView/LoginView.module.css?c53e","views/LoginView/LoginView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginView_container__UduIE\",\"form\":\"LoginView_form__zcR3f\",\"label\":\"LoginView_label__KKGkH\",\"title\":\"LoginView_title__tecUg\",\"input\":\"LoginView_input__QNJd1\",\"button\":\"LoginView_button__FJrpm\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/auth-operations';\nimport s from './LoginView.module.css'\n\nexport default function LoginView(){\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n  \n    const handleChange = ({ target: { name, value } }) => {\n      switch (name) {\n        case 'email':\n          return setEmail(value);\n        case 'password':\n          return setPassword(value);\n        default:\n          return;\n      }\n    };\n  \n    const handleSubmit = e => {\n      e.preventDefault();\n      dispatch(authOperations.logIn({ email, password }));\n      reset();\n    };\n\n    const reset = () => {\n        setEmail('');\n        setPassword('');\n      }\n  \n      return (\n          <div className={s.container}>\n            <h1 className={s.title}>Sign in</h1>\n      \n            <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\n              <label className={s.label}>\n              Email\n                <input className={s.input}\n                  type=\"email\"\n                  name=\"email\"\n                  value={email}\n                  onChange={handleChange}\n                  autoComplete=\"off\"\n                  required\n                />\n              </label>\n      \n              <label className={s.label}>\n              Password\n                <input className={s.input}\n                  type=\"password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={handleChange}\n                  autoComplete=\"off\"\n                  pattern=\"(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                  required\n                />\n              </label>\n              <button className={s.button} type=\"submit\" >Sign in</button>\n            </form>\n          </div>\n        );\n      }\n  "],"names":["LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","reset","className","s","onSubmit","e","preventDefault","authOperations","autoComplete","type","onChange","required","pattern"],"sourceRoot":""}